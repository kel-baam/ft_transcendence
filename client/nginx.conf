events {
    worker_connections 1024;  # Max number of simultaneous connections per worker
}
http
{
 
    include       mime.types;
    default_type  application/octet-stream;

    upstream auth-service {
        server auth-service:8000;
    }

    upstream user-service {
        server user-service:8001;
    }

    

    server {
    listen 3000;
    server_name localhost;
    index /assets/index.html;

    # location /socket/
    # {
    #     proxy_pass http://auth-service/ws/some_path/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header Host $host;
    # }
    
  
    location /auth/twoFactor/
    {
        auth_request /auth/validate;
        auth_request_set $auth_user $upstream_http_x_authenticated_user;
        proxy_set_header X-Authenticated-User $auth_user;
        proxy_pass http://auth-service/auth/twoFactor/;
        proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        proxy_set_header Pragma "no-cache";
        proxy_set_header Expires "0";
    }

    location /isAuthenticated
    {
        proxy_pass http://auth-service/auth/islogged/;
        proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        proxy_set_header Pragma "no-cache";
        proxy_set_header Expires "0";
    }

    location /auth/validate
    {
        internal;
        proxy_pass http://auth-service/auth/islogged/;
        proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        proxy_set_header Pragma "no-cache";
        proxy_set_header Expires "0";
    }
    location /auth
    {
        proxy_pass http://auth-service/auth;
        proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        proxy_set_header Pragma "no-cache";
        proxy_set_header Expires "0";
    }

  
    location /api/user
    {
        auth_request /auth/validate;
        auth_request_set $auth_user $upstream_http_x_authenticated_user;
        proxy_set_header X-Authenticated-User $auth_user;
        proxy_pass http://user-service;
        proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        proxy_set_header Pragma "no-cache";
        proxy_set_header Expires "0";

    }


    location /csrf{
        proxy_pass http://auth-service/get-csrf-token/;
    }

    location / {
    
        # auth_request /validate;
        root /usr/share/nginx/html;
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "0";
 
        # proxy_pass http://client-service;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location ~* \.css$ {
        root /usr/share/nginx/html/assets;
        try_files $uri =404;
        add_header Content-Type text/css;
    }

    location /fonts/{
        root /usr/share/nginx/html/assets/;
        try_files $uri =404;
        add_header Content-Type text/css;
    }

    location ~* \.(jpg|jpeg|png|gif|ico)$ {
        root /usr/share/nginx/html/assets/;
        try_files $uri =404;
    }
}

}

events {
    worker_connections 1024;  # Max number of simultaneous connections per worker
}
http
{
 
    include       mime.types;
    default_type  application/octet-stream;

    upstream auth-service {
        server auth-service:8000;
    }

    upstream user-service {
        server user-service:8001;
    }

    # upstream tournament-service {
    #     server tournament-service:8002;
    # }
    # upstream home-service {
    #     server home-service:8001;
    # }

    server {
        listen 3000;
        server_name localhost;
        index /assets/index.html;
        
        location /auth/twoFactor/
        {
            auth_request /auth/validate;
            auth_request_set $auth_user $upstream_http_x_authenticated_user;
            proxy_set_header X-Authenticated-User $auth_user;
            proxy_pass http://auth-service/auth/twoFactor/;
            proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
            proxy_set_header Pragma "no-cache";
            proxy_set_header Expires "0";
        }

        location /isAuthenticated
        {
            proxy_pass http://auth-service/auth/islogged/;
            proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
            proxy_set_header Pragma "no-cache";
            proxy_set_header Expires "0";
        }
        
        location /auth/validate
        {
            internal;
            proxy_set_header X-Request-Referer $http_referer;
            proxy_pass http://auth-service/auth/islogged/;
            proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
            proxy_set_header Pragma "no-cache";
            proxy_set_header Expires "0";
        }
        
        location /auth
        {
            proxy_pass http://auth-service/auth;
        }

        location /auth/refreshToken {

            proxy_pass http://auth-service/api/refresh/token/;
            proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
            proxy_set_header Pragma "no-cache";
            proxy_set_header Expires "0";
        }

        location /api/user
        {
            auth_request /auth/validate;
            auth_request_set $auth_user $upstream_http_x_authenticated_user;
            proxy_set_header X-Authenticated-User $auth_user;
            proxy_pass http://user-service;
            proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
            proxy_set_header Pragma "no-cache";
            proxy_set_header Expires "0";
        }
        
        # location /tournament/api {
        #     auth_request /auth/validate;  # Ensure the request is authenticated
        #     auth_request_set $auth_user $upstream_http_x_authenticated_user;
        #     proxy_set_header X-Authenticated-User $auth_user;

        #     # Limit the allowed methods to GET, POST, and DELETE
        #     limit_except GET POST DELETE PUT{
        #         deny all;  # Deny any method other than GET, POST, DELETE
        #     }

        #     # Proxy the request to the backend service
        #     proxy_pass http://tournament-service;

        #     # Set headers for cache control, ensuring no caching occurs
        #     proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        #     proxy_set_header Pragma "no-cache";
        #     proxy_set_header Expires "0";
        # }
        location /media/users_pics/
        {
            auth_request /auth/validate;
            # auth_request_set $auth_user $upstream_http_x_authenticated_user;
            # proxy_set_header X-Authenticated-User $auth_user;
            proxy_pass http://user-service;
            proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
            proxy_set_header Pragma "no-cache";
            proxy_set_header Expires "0";
        }

        location /csrf{
            proxy_pass http://auth-service/get-csrf-token/;
        }

        location / {
        
            root /usr/share/nginx/html;
            add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }


        location ~* ^/(?!media/)(.*)\.(css|jpg|jpeg|png|gif|ico)$ {
            root /usr/share/nginx/html/assets;
            try_files $uri =404;
            add_header Content-Type text/css;
        }

        location /fonts/{
            root /usr/share/nginx/html/assets/;
            try_files $uri =404;
            add_header Content-Type text/css;
        }

    }
}
# Generated by Django 4.2.18 on 2025-01-21 10:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0)),
                ('level', models.FloatField(default=0.0)),
                ('rank', models.BigIntegerField(default=0)),
            ],
            options={
                'db_table': 'Player',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(max_length=255, null=True)),
                ('nationality', models.CharField(max_length=255, null=True)),
                ('status', models.BooleanField(null=True)),
                ('is_verify', models.BooleanField(default=False)),
                ('verify_token', models.CharField(max_length=255, null=True)),
                ('enabled_twoFactor', models.BooleanField(default=False)),
                ('refresh_token', models.CharField(max_length=255, null=True)),
                ('secret', models.CharField(max_length=255, null=True)),
                ('tmp_secret', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, unique=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('type', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('matchmaking', 'Matchmaking Done'), ('started', 'Started'), ('finished', 'Finished')], default='pending', max_length=20)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_tournament_creator', to='online.user')),
            ],
            options={
                'db_table': 'Tournament',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('accepted', 'Accepted'), ('blocked', 'Blocked'), ('pending', 'Pending')], max_length=255)),
                ('reciever', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_request', to='online.user')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_request', to='online.user')),
            ],
            options={
                'db_table': 'Request',
            },
        ),
        migrations.CreateModel(
            name='PlayerTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('creator', 'Creator'), ('participant', 'Participant')], default='participant', max_length=11)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('invited', 'invited'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', max_length=10)),
                ('nickname', models.CharField(blank=True, max_length=50, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='player_images/')),
                ('invited_at', models.DateTimeField(auto_now_add=True)),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_entries', to='online.player')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='online.tournament')),
            ],
            options={
                'db_table': 'PlayerTournament',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='online.user'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('tournament', 'Tournament'), ('request', 'Request'), ('invitation', 'Invitation'), ('accepted', 'Accepted')], max_length=10)),
                ('message', models.TextField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to='online.user')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to='online.user')),
            ],
            options={
                'db_table': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('player1_points', models.PositiveIntegerField()),
                ('player2_points', models.PositiveIntegerField()),
                ('player1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player1', to='online.player')),
                ('player2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player2', to='online.player')),
            ],
            options={
                'db_table': 'Match',
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.BooleanField(default=False)),
                ('picture', models.JSONField()),
                ('PlayerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badge_locked', to='online.player')),
            ],
            options={
                'db_table': 'Achievement',
            },
        ),
    ]
